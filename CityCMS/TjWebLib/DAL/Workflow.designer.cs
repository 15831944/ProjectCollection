#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.225
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace TongJi.Web.DAL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CityMis")]
	public partial class WorkflowDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void Insertentity_attachment(entity_attachment instance);
    partial void Updateentity_attachment(entity_attachment instance);
    partial void Deleteentity_attachment(entity_attachment instance);
    partial void Insertentity_data(entity_data instance);
    partial void Updateentity_data(entity_data instance);
    partial void Deleteentity_data(entity_data instance);
    partial void Insertentity_enum(entity_enum instance);
    partial void Updateentity_enum(entity_enum instance);
    partial void Deleteentity_enum(entity_enum instance);
    partial void Insertentity_enum_member(entity_enum_member instance);
    partial void Updateentity_enum_member(entity_enum_member instance);
    partial void Deleteentity_enum_member(entity_enum_member instance);
    partial void Insertentity_field(entity_field instance);
    partial void Updateentity_field(entity_field instance);
    partial void Deleteentity_field(entity_field instance);
    partial void Insertentity_flow(entity_flow instance);
    partial void Updateentity_flow(entity_flow instance);
    partial void Deleteentity_flow(entity_flow instance);
    partial void Insertentity_flow_inst(entity_flow_inst instance);
    partial void Updateentity_flow_inst(entity_flow_inst instance);
    partial void Deleteentity_flow_inst(entity_flow_inst instance);
    partial void Insertentity_form(entity_form instance);
    partial void Updateentity_form(entity_form instance);
    partial void Deleteentity_form(entity_form instance);
    partial void Insertentity_form_inst(entity_form_inst instance);
    partial void Updateentity_form_inst(entity_form_inst instance);
    partial void Deleteentity_form_inst(entity_form_inst instance);
    partial void Insertentity_log(entity_log instance);
    partial void Updateentity_log(entity_log instance);
    partial void Deleteentity_log(entity_log instance);
    partial void Insertentity_operation(entity_operation instance);
    partial void Updateentity_operation(entity_operation instance);
    partial void Deleteentity_operation(entity_operation instance);
    partial void Insertentity_state(entity_state instance);
    partial void Updateentity_state(entity_state instance);
    partial void Deleteentity_state(entity_state instance);
    partial void Insertentity_user(entity_user instance);
    partial void Updateentity_user(entity_user instance);
    partial void Deleteentity_user(entity_user instance);
    partial void Insertentity_usergroup(entity_usergroup instance);
    partial void Updateentity_usergroup(entity_usergroup instance);
    partial void Deleteentity_usergroup(entity_usergroup instance);
    #endregion
		
		public WorkflowDataContext() : 
				base(global::TongJi.Web.Properties.Settings.Default.CityMisConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public WorkflowDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkflowDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkflowDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public WorkflowDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<entity_attachment> entity_attachment
		{
			get
			{
				return this.GetTable<entity_attachment>();
			}
		}
		
		public System.Data.Linq.Table<entity_data> entity_data
		{
			get
			{
				return this.GetTable<entity_data>();
			}
		}
		
		public System.Data.Linq.Table<entity_enum> entity_enum
		{
			get
			{
				return this.GetTable<entity_enum>();
			}
		}
		
		public System.Data.Linq.Table<entity_enum_member> entity_enum_member
		{
			get
			{
				return this.GetTable<entity_enum_member>();
			}
		}
		
		public System.Data.Linq.Table<entity_field> entity_field
		{
			get
			{
				return this.GetTable<entity_field>();
			}
		}
		
		public System.Data.Linq.Table<entity_flow> entity_flow
		{
			get
			{
				return this.GetTable<entity_flow>();
			}
		}
		
		public System.Data.Linq.Table<entity_flow_inst> entity_flow_inst
		{
			get
			{
				return this.GetTable<entity_flow_inst>();
			}
		}
		
		public System.Data.Linq.Table<entity_form> entity_form
		{
			get
			{
				return this.GetTable<entity_form>();
			}
		}
		
		public System.Data.Linq.Table<entity_form_inst> entity_form_inst
		{
			get
			{
				return this.GetTable<entity_form_inst>();
			}
		}
		
		public System.Data.Linq.Table<entity_log> entity_log
		{
			get
			{
				return this.GetTable<entity_log>();
			}
		}
		
		public System.Data.Linq.Table<entity_operation> entity_operation
		{
			get
			{
				return this.GetTable<entity_operation>();
			}
		}
		
		public System.Data.Linq.Table<entity_state> entity_state
		{
			get
			{
				return this.GetTable<entity_state>();
			}
		}
		
		public System.Data.Linq.Table<relation_flow_form> relation_flow_form
		{
			get
			{
				return this.GetTable<relation_flow_form>();
			}
		}
		
		public System.Data.Linq.Table<entity_user> entity_user
		{
			get
			{
				return this.GetTable<entity_user>();
			}
		}
		
		public System.Data.Linq.Table<entity_usergroup> entity_usergroup
		{
			get
			{
				return this.GetTable<entity_usergroup>();
			}
		}
		
		public System.Data.Linq.Table<relation_user_usergroup> relation_user_usergroup
		{
			get
			{
				return this.GetTable<relation_user_usergroup>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_attachment")]
	public partial class entity_attachment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _filename;
		
		private int _fk_flow_inst_id;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnfilenameChanging(string value);
    partial void OnfilenameChanged();
    partial void Onfk_flow_inst_idChanging(int value);
    partial void Onfk_flow_inst_idChanged();
    #endregion
		
		public entity_attachment()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_filename", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string filename
		{
			get
			{
				return this._filename;
			}
			set
			{
				if ((this._filename != value))
				{
					this.OnfilenameChanging(value);
					this.SendPropertyChanging();
					this._filename = value;
					this.SendPropertyChanged("filename");
					this.OnfilenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_flow_inst_id", DbType="Int NOT NULL")]
		public int fk_flow_inst_id
		{
			get
			{
				return this._fk_flow_inst_id;
			}
			set
			{
				if ((this._fk_flow_inst_id != value))
				{
					this.Onfk_flow_inst_idChanging(value);
					this.SendPropertyChanging();
					this._fk_flow_inst_id = value;
					this.SendPropertyChanged("fk_flow_inst_id");
					this.Onfk_flow_inst_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_data")]
	public partial class entity_data : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _value;
		
		private int _fk_field_id;
		
		private int _fk_flow_inst_id;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void Onfk_field_idChanging(int value);
    partial void Onfk_field_idChanged();
    partial void Onfk_flow_inst_idChanging(int value);
    partial void Onfk_flow_inst_idChanged();
    #endregion
		
		public entity_data()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_field_id", DbType="Int NOT NULL")]
		public int fk_field_id
		{
			get
			{
				return this._fk_field_id;
			}
			set
			{
				if ((this._fk_field_id != value))
				{
					this.Onfk_field_idChanging(value);
					this.SendPropertyChanging();
					this._fk_field_id = value;
					this.SendPropertyChanged("fk_field_id");
					this.Onfk_field_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_flow_inst_id", DbType="Int NOT NULL")]
		public int fk_flow_inst_id
		{
			get
			{
				return this._fk_flow_inst_id;
			}
			set
			{
				if ((this._fk_flow_inst_id != value))
				{
					this.Onfk_flow_inst_idChanging(value);
					this.SendPropertyChanging();
					this._fk_flow_inst_id = value;
					this.SendPropertyChanged("fk_flow_inst_id");
					this.Onfk_flow_inst_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_enum")]
	public partial class entity_enum : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public entity_enum()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_enum_member")]
	public partial class entity_enum_member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _value;
		
		private int _entity_enum_id;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void Onentity_enum_idChanging(int value);
    partial void Onentity_enum_idChanged();
    #endregion
		
		public entity_enum_member()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_entity_enum_id", DbType="Int NOT NULL")]
		public int entity_enum_id
		{
			get
			{
				return this._entity_enum_id;
			}
			set
			{
				if ((this._entity_enum_id != value))
				{
					this.Onentity_enum_idChanging(value);
					this.SendPropertyChanging();
					this._entity_enum_id = value;
					this.SendPropertyChanged("entity_enum_id");
					this.Onentity_enum_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_field")]
	public partial class entity_field : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _datatype;
		
		private int _fk_form_id;
		
		private int _fk_enum_id;
		
		private string _validation_type;
		
		private string _validation_param;
		
		private bool _enabled;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndatatypeChanging(string value);
    partial void OndatatypeChanged();
    partial void Onfk_form_idChanging(int value);
    partial void Onfk_form_idChanged();
    partial void Onfk_enum_idChanging(int value);
    partial void Onfk_enum_idChanged();
    partial void Onvalidation_typeChanging(string value);
    partial void Onvalidation_typeChanged();
    partial void Onvalidation_paramChanging(string value);
    partial void Onvalidation_paramChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    #endregion
		
		public entity_field()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datatype", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string datatype
		{
			get
			{
				return this._datatype;
			}
			set
			{
				if ((this._datatype != value))
				{
					this.OndatatypeChanging(value);
					this.SendPropertyChanging();
					this._datatype = value;
					this.SendPropertyChanged("datatype");
					this.OndatatypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_form_id", DbType="Int NOT NULL")]
		public int fk_form_id
		{
			get
			{
				return this._fk_form_id;
			}
			set
			{
				if ((this._fk_form_id != value))
				{
					this.Onfk_form_idChanging(value);
					this.SendPropertyChanging();
					this._fk_form_id = value;
					this.SendPropertyChanged("fk_form_id");
					this.Onfk_form_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_enum_id", DbType="Int NOT NULL")]
		public int fk_enum_id
		{
			get
			{
				return this._fk_enum_id;
			}
			set
			{
				if ((this._fk_enum_id != value))
				{
					this.Onfk_enum_idChanging(value);
					this.SendPropertyChanging();
					this._fk_enum_id = value;
					this.SendPropertyChanged("fk_enum_id");
					this.Onfk_enum_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_validation_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string validation_type
		{
			get
			{
				return this._validation_type;
			}
			set
			{
				if ((this._validation_type != value))
				{
					this.Onvalidation_typeChanging(value);
					this.SendPropertyChanging();
					this._validation_type = value;
					this.SendPropertyChanged("validation_type");
					this.Onvalidation_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_validation_param", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string validation_param
		{
			get
			{
				return this._validation_param;
			}
			set
			{
				if ((this._validation_param != value))
				{
					this.Onvalidation_paramChanging(value);
					this.SendPropertyChanging();
					this._validation_param = value;
					this.SendPropertyChanged("validation_param");
					this.Onvalidation_paramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabled", DbType="Bit NOT NULL")]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_flow")]
	public partial class entity_flow : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.DateTime _create_time;
		
		private System.DateTime _modify_time;
		
		private int _fk_form_id_main;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Oncreate_timeChanging(System.DateTime value);
    partial void Oncreate_timeChanged();
    partial void Onmodify_timeChanging(System.DateTime value);
    partial void Onmodify_timeChanged();
    partial void Onfk_form_id_mainChanging(int value);
    partial void Onfk_form_id_mainChanged();
    #endregion
		
		public entity_flow()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_time", DbType="DateTime NOT NULL")]
		public System.DateTime create_time
		{
			get
			{
				return this._create_time;
			}
			set
			{
				if ((this._create_time != value))
				{
					this.Oncreate_timeChanging(value);
					this.SendPropertyChanging();
					this._create_time = value;
					this.SendPropertyChanged("create_time");
					this.Oncreate_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modify_time", DbType="DateTime NOT NULL")]
		public System.DateTime modify_time
		{
			get
			{
				return this._modify_time;
			}
			set
			{
				if ((this._modify_time != value))
				{
					this.Onmodify_timeChanging(value);
					this.SendPropertyChanging();
					this._modify_time = value;
					this.SendPropertyChanged("modify_time");
					this.Onmodify_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_form_id_main", DbType="Int NOT NULL")]
		public int fk_form_id_main
		{
			get
			{
				return this._fk_form_id_main;
			}
			set
			{
				if ((this._fk_form_id_main != value))
				{
					this.Onfk_form_id_mainChanging(value);
					this.SendPropertyChanging();
					this._fk_form_id_main = value;
					this.SendPropertyChanged("fk_form_id_main");
					this.Onfk_form_id_mainChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_flow_inst")]
	public partial class entity_flow_inst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _fk_flow_id;
		
		private int _fk_state_id;
		
		private int _fk_project_id;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfk_flow_idChanging(int value);
    partial void Onfk_flow_idChanged();
    partial void Onfk_state_idChanging(int value);
    partial void Onfk_state_idChanged();
    partial void Onfk_project_idChanging(int value);
    partial void Onfk_project_idChanged();
    #endregion
		
		public entity_flow_inst()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_flow_id", DbType="Int NOT NULL")]
		public int fk_flow_id
		{
			get
			{
				return this._fk_flow_id;
			}
			set
			{
				if ((this._fk_flow_id != value))
				{
					this.Onfk_flow_idChanging(value);
					this.SendPropertyChanging();
					this._fk_flow_id = value;
					this.SendPropertyChanged("fk_flow_id");
					this.Onfk_flow_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_state_id", DbType="Int NOT NULL")]
		public int fk_state_id
		{
			get
			{
				return this._fk_state_id;
			}
			set
			{
				if ((this._fk_state_id != value))
				{
					this.Onfk_state_idChanging(value);
					this.SendPropertyChanging();
					this._fk_state_id = value;
					this.SendPropertyChanged("fk_state_id");
					this.Onfk_state_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_project_id", DbType="Int NOT NULL")]
		public int fk_project_id
		{
			get
			{
				return this._fk_project_id;
			}
			set
			{
				if ((this._fk_project_id != value))
				{
					this.Onfk_project_idChanging(value);
					this.SendPropertyChanging();
					this._fk_project_id = value;
					this.SendPropertyChanged("fk_project_id");
					this.Onfk_project_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_form")]
	public partial class entity_form : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Xml.Linq.XElement _def;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndefChanging(System.Xml.Linq.XElement value);
    partial void OndefChanged();
    #endregion
		
		public entity_form()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_def", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement def
		{
			get
			{
				return this._def;
			}
			set
			{
				if ((this._def != value))
				{
					this.OndefChanging(value);
					this.SendPropertyChanging();
					this._def = value;
					this.SendPropertyChanged("def");
					this.OndefChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_form_inst")]
	public partial class entity_form_inst : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _fk_form_id;
		
		private int _fk_flow_inst_id;
		
		private System.Xml.Linq.XElement _data;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfk_form_idChanging(int value);
    partial void Onfk_form_idChanged();
    partial void Onfk_flow_inst_idChanging(int value);
    partial void Onfk_flow_inst_idChanged();
    partial void OndataChanging(System.Xml.Linq.XElement value);
    partial void OndataChanged();
    #endregion
		
		public entity_form_inst()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_form_id", DbType="Int NOT NULL")]
		public int fk_form_id
		{
			get
			{
				return this._fk_form_id;
			}
			set
			{
				if ((this._fk_form_id != value))
				{
					this.Onfk_form_idChanging(value);
					this.SendPropertyChanging();
					this._fk_form_id = value;
					this.SendPropertyChanged("fk_form_id");
					this.Onfk_form_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_flow_inst_id", DbType="Int NOT NULL")]
		public int fk_flow_inst_id
		{
			get
			{
				return this._fk_flow_inst_id;
			}
			set
			{
				if ((this._fk_flow_inst_id != value))
				{
					this.Onfk_flow_inst_idChanging(value);
					this.SendPropertyChanging();
					this._fk_flow_inst_id = value;
					this.SendPropertyChanged("fk_flow_inst_id");
					this.Onfk_flow_inst_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement data
		{
			get
			{
				return this._data;
			}
			set
			{
				if ((this._data != value))
				{
					this.OndataChanging(value);
					this.SendPropertyChanging();
					this._data = value;
					this.SendPropertyChanged("data");
					this.OndataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_log")]
	public partial class entity_log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _fk_flow_inst_id;
		
		private int _fk_user_id;
		
		private int _fk_operation_id;
		
		private System.DateTime _time;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfk_flow_inst_idChanging(int value);
    partial void Onfk_flow_inst_idChanged();
    partial void Onfk_user_idChanging(int value);
    partial void Onfk_user_idChanged();
    partial void Onfk_operation_idChanging(int value);
    partial void Onfk_operation_idChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    #endregion
		
		public entity_log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_flow_inst_id", DbType="Int NOT NULL")]
		public int fk_flow_inst_id
		{
			get
			{
				return this._fk_flow_inst_id;
			}
			set
			{
				if ((this._fk_flow_inst_id != value))
				{
					this.Onfk_flow_inst_idChanging(value);
					this.SendPropertyChanging();
					this._fk_flow_inst_id = value;
					this.SendPropertyChanged("fk_flow_inst_id");
					this.Onfk_flow_inst_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_user_id", DbType="Int NOT NULL")]
		public int fk_user_id
		{
			get
			{
				return this._fk_user_id;
			}
			set
			{
				if ((this._fk_user_id != value))
				{
					this.Onfk_user_idChanging(value);
					this.SendPropertyChanging();
					this._fk_user_id = value;
					this.SendPropertyChanged("fk_user_id");
					this.Onfk_user_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_operation_id", DbType="Int NOT NULL")]
		public int fk_operation_id
		{
			get
			{
				return this._fk_operation_id;
			}
			set
			{
				if ((this._fk_operation_id != value))
				{
					this.Onfk_operation_idChanging(value);
					this.SendPropertyChanging();
					this._fk_operation_id = value;
					this.SendPropertyChanged("fk_operation_id");
					this.Onfk_operation_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_operation")]
	public partial class entity_operation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _fk_user_id;
		
		private int _fk_usergroup_id;
		
		private int _fk_state_id_start;
		
		private int _fk_state_id_end;
		
		private bool _enabled;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onfk_user_idChanging(int value);
    partial void Onfk_user_idChanged();
    partial void Onfk_usergroup_idChanging(int value);
    partial void Onfk_usergroup_idChanged();
    partial void Onfk_state_id_startChanging(int value);
    partial void Onfk_state_id_startChanged();
    partial void Onfk_state_id_endChanging(int value);
    partial void Onfk_state_id_endChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    #endregion
		
		public entity_operation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_user_id", DbType="Int NOT NULL")]
		public int fk_user_id
		{
			get
			{
				return this._fk_user_id;
			}
			set
			{
				if ((this._fk_user_id != value))
				{
					this.Onfk_user_idChanging(value);
					this.SendPropertyChanging();
					this._fk_user_id = value;
					this.SendPropertyChanged("fk_user_id");
					this.Onfk_user_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_usergroup_id", DbType="Int NOT NULL")]
		public int fk_usergroup_id
		{
			get
			{
				return this._fk_usergroup_id;
			}
			set
			{
				if ((this._fk_usergroup_id != value))
				{
					this.Onfk_usergroup_idChanging(value);
					this.SendPropertyChanging();
					this._fk_usergroup_id = value;
					this.SendPropertyChanged("fk_usergroup_id");
					this.Onfk_usergroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_state_id_start", DbType="Int NOT NULL")]
		public int fk_state_id_start
		{
			get
			{
				return this._fk_state_id_start;
			}
			set
			{
				if ((this._fk_state_id_start != value))
				{
					this.Onfk_state_id_startChanging(value);
					this.SendPropertyChanging();
					this._fk_state_id_start = value;
					this.SendPropertyChanged("fk_state_id_start");
					this.Onfk_state_id_startChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_state_id_end", DbType="Int NOT NULL")]
		public int fk_state_id_end
		{
			get
			{
				return this._fk_state_id_end;
			}
			set
			{
				if ((this._fk_state_id_end != value))
				{
					this.Onfk_state_id_endChanging(value);
					this.SendPropertyChanging();
					this._fk_state_id_end = value;
					this.SendPropertyChanged("fk_state_id_end");
					this.Onfk_state_id_endChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabled", DbType="Bit NOT NULL")]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_state")]
	public partial class entity_state : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private int _fk_flow_id;
		
		private bool _enabled;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onfk_flow_idChanging(int value);
    partial void Onfk_flow_idChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    #endregion
		
		public entity_state()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_flow_id", DbType="Int NOT NULL")]
		public int fk_flow_id
		{
			get
			{
				return this._fk_flow_id;
			}
			set
			{
				if ((this._fk_flow_id != value))
				{
					this.Onfk_flow_idChanging(value);
					this.SendPropertyChanging();
					this._fk_flow_id = value;
					this.SendPropertyChanged("fk_flow_id");
					this.Onfk_flow_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabled", DbType="Bit NOT NULL")]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.relation_flow_form")]
	public partial class relation_flow_form
	{
		
		private int _fk_flow_id;
		
		private int _fk_form_id;
		
		public relation_flow_form()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_flow_id", DbType="Int NOT NULL")]
		public int fk_flow_id
		{
			get
			{
				return this._fk_flow_id;
			}
			set
			{
				if ((this._fk_flow_id != value))
				{
					this._fk_flow_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_form_id", DbType="Int NOT NULL")]
		public int fk_form_id
		{
			get
			{
				return this._fk_form_id;
			}
			set
			{
				if ((this._fk_form_id != value))
				{
					this._fk_form_id = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_user")]
	public partial class entity_user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private System.Xml.Linq.XElement _info;
		
		private System.DateTime _time;
		
		private bool _enabled;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OninfoChanging(System.Xml.Linq.XElement value);
    partial void OninfoChanged();
    partial void OntimeChanging(System.DateTime value);
    partial void OntimeChanged();
    partial void OnenabledChanging(bool value);
    partial void OnenabledChanged();
    #endregion
		
		public entity_user()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="Xml NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Xml.Linq.XElement info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_time", DbType="DateTime NOT NULL")]
		public System.DateTime time
		{
			get
			{
				return this._time;
			}
			set
			{
				if ((this._time != value))
				{
					this.OntimeChanging(value);
					this.SendPropertyChanging();
					this._time = value;
					this.SendPropertyChanged("time");
					this.OntimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_enabled", DbType="Bit NOT NULL")]
		public bool enabled
		{
			get
			{
				return this._enabled;
			}
			set
			{
				if ((this._enabled != value))
				{
					this.OnenabledChanging(value);
					this.SendPropertyChanging();
					this._enabled = value;
					this.SendPropertyChanged("enabled");
					this.OnenabledChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.entity_usergroup")]
	public partial class entity_usergroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    #endregion
		
		public entity_usergroup()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.relation_user_usergroup")]
	public partial class relation_user_usergroup
	{
		
		private int _fk_user_id;
		
		private int _fk_usergroup_id;
		
		public relation_user_usergroup()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_user_id", DbType="Int NOT NULL")]
		public int fk_user_id
		{
			get
			{
				return this._fk_user_id;
			}
			set
			{
				if ((this._fk_user_id != value))
				{
					this._fk_user_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fk_usergroup_id", DbType="Int NOT NULL")]
		public int fk_usergroup_id
		{
			get
			{
				return this._fk_usergroup_id;
			}
			set
			{
				if ((this._fk_usergroup_id != value))
				{
					this._fk_usergroup_id = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
